volumes:
  db_data:

services:
  server:
    image: node:18
    working_dir: /app
    volumes:
      - ./server:/app
      - ./client/dist:/app/client/dist
    command: sh -c "npm install && npx prisma migrate deploy && npm run seed && npm run build && npm run start -- --host 0.0.0.0"
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL:postgresql://app_user:secretpassword@postgres_app:5432/app_db?schema=public
      - JWT_SECRET="kdjflksdjflkjsdlkfjsdlkfjldskfjlsdkjf3482304948sldjslijfslk"
      - REDIS_HOST=redis
    depends_on:
      - postgres_app
    networks:
      - dev_network


  postgres_app:
    image: postgres
    hostname: postgres
    container_name: postgres_app
    restart: always
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: secretpassword
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    expose:
      - 5432
    networks:
      - dev_network
      
  client:
    image: node:18
    working_dir: /app
    volumes:
      - ./client:/app
      - ./client/dist:/app/dist 
    command: sh -c "npm install && npm run build"
    depends_on:
      - server
    networks:
      - dev_network

  redis:
    image: redis:latest
    container_name: redis2
    volumes: 
        - db_data:/data
    ports:
      - "6379:6379"
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - dev_network
      
networks:
  dev_network:
